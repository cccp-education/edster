package education.cccp.edtech.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PresentationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresentationAllPropertiesEquals(Presentation expected, Presentation actual) {
        assertPresentationAutoGeneratedPropertiesEquals(expected, actual);
        assertPresentationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresentationAllUpdatablePropertiesEquals(Presentation expected, Presentation actual) {
        assertPresentationUpdatableFieldsEquals(expected, actual);
        assertPresentationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresentationAutoGeneratedPropertiesEquals(Presentation expected, Presentation actual) {
        assertThat(actual)
            .as("Verify Presentation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresentationUpdatableFieldsEquals(Presentation expected, Presentation actual) {
        assertThat(actual)
            .as("Verify Presentation relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getPlan()).as("check plan").isEqualTo(expected.getPlan()))
            .satisfies(a -> assertThat(a.getUri()).as("check uri").isEqualTo(expected.getUri()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPresentationUpdatableRelationshipsEquals(Presentation expected, Presentation actual) {
        // empty method
    }
}
