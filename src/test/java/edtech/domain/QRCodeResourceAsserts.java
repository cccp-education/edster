package edtech.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QRCodeResourceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQRCodeResourceAllPropertiesEquals(QRCodeResource expected, QRCodeResource actual) {
        assertQRCodeResourceAutoGeneratedPropertiesEquals(expected, actual);
        assertQRCodeResourceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQRCodeResourceAllUpdatablePropertiesEquals(QRCodeResource expected, QRCodeResource actual) {
        assertQRCodeResourceUpdatableFieldsEquals(expected, actual);
        assertQRCodeResourceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQRCodeResourceAutoGeneratedPropertiesEquals(QRCodeResource expected, QRCodeResource actual) {
        assertThat(actual)
            .as("Verify QRCodeResource auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQRCodeResourceUpdatableFieldsEquals(QRCodeResource expected, QRCodeResource actual) {
        assertThat(actual)
            .as("Verify QRCodeResource relevant properties")
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getUri()).as("check uri").isEqualTo(expected.getUri()))
            .satisfies(a -> assertThat(a.getData()).as("check data").isEqualTo(expected.getData()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQRCodeResourceUpdatableRelationshipsEquals(QRCodeResource expected, QRCodeResource actual) {
        assertThat(actual)
            .as("Verify QRCodeResource relationships")
            .satisfies(a -> assertThat(a.getAsciidocSlide()).as("check asciidocSlide").isEqualTo(expected.getAsciidocSlide()));
    }
}
